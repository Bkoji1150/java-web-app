pipeline {
  agent { label 'docker' }
  tools {
        maven 'mvn'
        jdk   'jdk'
    }
  options {
    buildDiscarder(logRotator(numToKeepStr: '5'))
  }
  stages {
     stage ('Cloning git & Build') {
          steps {
                checkout scm
            }
        }
    stage('Scan') {
      steps {
        withSonarQubeEnv(installationName: 'sq1') { 
          sh './mvnw clean org.sonarsource.scanner.maven:sonar-maven-plugin:3.9.0.2155:sonar'
        }
      }
    }
     stage("Static Code analysis With sonar") {
      steps {
        timeout(time: 2, unit: 'MINUTES') {
          waitForQualityGate abortPipeline: true
        }
      }
    }
  }
}

stage("Quality Gate"){
          timeout(time: 1, unit: 'HOURS') {
              def qg = waitForQualityGate()
              if (qg.status != 'OK') {
                 slackSend channel: '#jenkins_notification', color: 'danger', message: 'Pipeline aborted due to quality gate failure', teamDomain: 'jenkins-training', tokenCredentialId: 'SlackToken'
                  error "Pipeline aborted due to quality gate failure: ${qg.status}"
              }
          }
      }
